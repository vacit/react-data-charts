{"version":3,"sources":["charts/LineChart.js","helpers.js","charts/PieChart.js","components/AuthButton.js","optionObjects/pieBaseObj.js","optionObjects/lineBaseObj.js","components/Login.js","components/Nav.js","components/NotFound.js","components/PrivateRouter.js","App.js","serviceWorker.js","index.js"],"names":["LineChart","props","className","option","notMerge","lazyUpdate","style","height","DATA_URL","fields","getData","a","fetch","response","json","PieChart","AuthButton","history","useHistory","authObj","isAuthenticated","onClick","signout","push","process","pieBaseObj","title","text","subtext","left","tooltip","trigger","formatter","legend","type","orient","top","icon","align","data","selected","series","label","alignTo","margin","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","lineBaseObj","axisPointer","show","position","pos","params","el","elRect","size","obj","viewSize","xAxis","nameLocation","axisLabel","yAxis","lineStyle","color","name","smooth","areaStyle","LoginPage","location","useLocation","useState","email","password","inputValue","setInputValue","from","state","pathname","handleInputChange","event","target","value","onSubmit","preventDefault","authenticate","replace","onChange","placeholder","Nav","backgroundColor","to","NotFound","PrivateRoute","children","rest","render","App","setState","getNames","names","result","forEach","hotelname","getDistribution","uniqueNames","uniqueCount","distribution","reduce","acum","cur","Object","assign","getPieOption","commentCount","legendData","seriesData","map","index","pieOption","lineOption1","lineOption2","then","basePrice","baseprice","commentcount","axisTick","alignWithLabel","rotate","this","exact","path","Login","component","Component","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.650225cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst LineChart = props => {\r\n  return (\r\n    <div>\r\n      <ReactEcharts\r\n        className='py-4 px-1 bg-light'\r\n        option={props}\r\n        notMerge={true}\r\n        lazyUpdate={true}\r\n        // theme={'dark'}\r\n        // showLoading ={true}\r\n        style={{ height: '50vh' }}\r\n        // onChartReady={this.onChartReadyCallback}\r\n        // onEvents={EventsDict}\r\n        // opts={}\r\n      />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","const url = 'http://localhost:3000/hotels/'\r\n\r\nconst DATA_URL = fields => {\r\n    return `${url}?fields=${fields}`\r\n}\r\n\r\nexport const getData = async (fields) => {\r\n    const response = await fetch(DATA_URL(fields));\r\n    return response.json()\r\n};","import React from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nconst PieChart = props => {\r\n  return (\r\n    <div\r\n    //   style={{\r\n    //     display: 'flex',\r\n    //     justifyContent: 'space-around',\r\n    //     alignItems: 'center'\r\n    //   }}\r\n    >\r\n      <ReactEcharts\r\n        // className='col-lg-8 col-md-8 col-sm-10 col-12'\r\n        className='py-4 px-1 bg-light '\r\n        option={props}\r\n        notMerge={true}\r\n        lazyUpdate={true}\r\n        // theme={'dark'}\r\n        // showLoading ={true}\r\n        style={{\r\n          height: '90vh'\r\n        }}\r\n        // onChartReady={this.onChartReadyCallback}\r\n        // onEvents={EventsDict}\r\n        // opts={}\r\n      />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst AuthButton = props => {\r\n  let history = useHistory();\r\n\r\n  const authObj = props.authObj;\r\n  return authObj.isAuthenticated ? (\r\n    <button\r\n      className='btn btn-sm btn-outline-info mr-3 ml-3'\r\n      onClick={() => {\r\n        authObj.signout();\r\n        history.push(process.env.PUBLIC_URL + '/login');\r\n      }}\r\n    >\r\n      Sign out\r\n    </button>\r\n  ) : (\r\n    <small className='text-right text-muted '>\r\n      Please login with: teset@test.com, password: test\r\n    </small>\r\n  );\r\n};\r\n\r\nexport default AuthButton;\r\n","import AuthButton from '../components/AuthButton';\r\n\r\nexport const pieBaseObj = {\r\n  title: {\r\n    text: 'Comments Statistics',\r\n    subtext: 'How many comment every hotel has',\r\n    left: 'left'\r\n  },\r\n  tooltip: {\r\n    trigger: 'item',\r\n    formatter: '{b} : ({d}%) <br/> Comment : {c} '\r\n  },\r\n  legend: {\r\n\r\n    type: 'scroll',\r\n    orient: 'vertical',\r\n    top: '54%',\r\n    // buttom: 'auto',\r\n    left: '30%',\r\n    // right: '50%',\r\n    // width: 'auto',\r\n    // height: '300',\r\n    icon:'circle',\r\n    align: 'left',\r\n    // selectedMode:'false',\r\n    data: [],\r\n\r\n    selected: {}\r\n  },\r\n  series: [\r\n    {\r\n        label: {\r\n            alignTo: 'labelLine',\r\n            margin:'10%'\r\n        },\r\n      type: 'pie',\r\n      radius: '38%',\r\n      center: ['50%', '30%'],\r\n      data: [],\r\n      emphasis: {\r\n        itemStyle: {\r\n          shadowBlur: 10,\r\n          shadowOffsetX: 0,\r\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n        }\r\n      }\r\n    }\r\n  ]\r\n};\r\n","export const lineBaseObj = {\r\n    title: {\r\n        text: 'Distribution',\r\n        subtext: 'Occurrence above 20 in a sample search result'\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n                show: false\r\n            }\r\n        },\r\n        formatter: '{b0}<br /> Total: {c0} Entries found',\r\n        position: function (pos, params, el, elRect, size) {\r\n            var obj = { top: 60 };\r\n            obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 80;\r\n            return obj;\r\n        },\r\n    },\r\n\r\n    xAxis: {\r\n\r\n        nameLocation: 'center',\r\n        type: 'category',\r\n        data: [],\r\n\r\n\r\n        axisLabel: {\r\n            show: false,\r\n        }\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n    },\r\n    lineStyle: {\r\n        color: 'green'\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Repetition',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: [],\r\n            areaStyle: {\r\n                color: 'green'\r\n            }\r\n\r\n\r\n        }\r\n    ]\r\n};","import React, { useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst LoginPage = props => {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n  const [inputValue, setInputValue] = useState({ email: '', password: '' });\r\n\r\n  const authObj = { ...props.authObj };\r\n\r\n  let { from } = location.state || { from: { pathname: process.env.PUBLIC_URL + '/piechart' } };\r\n\r\n  const handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    setInputValue({\r\n      ...inputValue,\r\n      [name]: value\r\n    });\r\n  };\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    authObj.authenticate(inputValue);\r\n    history.replace(from);\r\n  };\r\n  return (\r\n    <div\r\n      className='\r\n      login\r\n      bg-info \r\n      text-white\r\n      d-flex \r\n      flex-column\r\n      flex-lg-row\r\n      flex-xl-row\r\n      align-items-center\r\n      justify-content-lg-around\r\n      justify-content-xl-around\r\n      '\r\n      // justify-content-between\r\n      style={{ height: '90vh' }}\r\n    >\r\n      <div className=' px-4 my-4 mt-5 text-center align-self-center '>\r\n        <h1 className=' font-weight-bold'>Mediterranean Sea Hotels Group</h1>\r\n        <small className=' form-text '>\r\n          Please sign in to start using our statistics app\r\n        </small>\r\n      </div>\r\n\r\n      <form className='mx-1 my-4 form-block ' onSubmit={handleSubmit}>\r\n        <div className='form-group '>\r\n          <label className=''>\r\n            Email\r\n            <input\r\n              className='form-control'\r\n              name='email'\r\n              type='email'\r\n              value={inputValue.email}\r\n              onChange={handleInputChange}\r\n              placeholder='mail@domain.com'\r\n            ></input>\r\n          </label>\r\n        </div>\r\n\r\n        <div className='form-group'>\r\n          <label>\r\n            Password\r\n            <input\r\n              className='form-control'\r\n              name='password'\r\n              type='password'\r\n              value={inputValue.password}\r\n              onChange={handleInputChange}\r\n            ></input>\r\n          </label>\r\n        </div>\r\n        <input className='btn btn-primary mr-2 ' type='submit' value='Login' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthButton from './AuthButton';\r\nfunction Nav(props) {\r\n  const authObj = props.authObj;\r\n\r\n  return (\r\n    <nav\r\n      className='navbar navbar-dark \r\n      justify-content-lg-center \r\n      justify-content-md-between\r\n      justify-content-sm-between\r\n      align-items-center'\r\n      style={{ backgroundColor: 'rgb(150,200,100)' }}\r\n    >\r\n      <Link className='nav-link' to={process.env.PUBLIC_URL + '/piechart'}>\r\n        Pie Chart\r\n      </Link>\r\n      <Link className='nav-link ' to={process.env.PUBLIC_URL + '/linechart1'}>\r\n        Line Chart One\r\n      </Link>\r\n      <Link className='nav-link ' to={process.env.PUBLIC_URL + '/linechart2'}>\r\n        Line Chart Two\r\n      </Link>\r\n      <AuthButton authObj={authObj} />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst NotFound = props => {\r\n  // console.log(props);\r\n  return <h1>404 Error</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = props => {\r\n  const { authObj, children, ...rest } = props;\r\n  // console.log(props)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        authObj.isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport LineChart from './charts/LineChart';\r\nimport { getData } from './helpers';\r\nimport PieChart from './charts/PieChart';\r\nimport { pieBaseObj } from './optionObjects/pieBaseObj';\r\nimport { lineBaseObj } from './optionObjects/lineBaseObj';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport LoginPage from './components/Login';\r\nimport Nav from './components/Nav';\r\nimport NotFound from './components/NotFound';\r\nimport PrivateRoute from './components/PrivateRouter';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pieOption: {},\r\n      lineOption1: {},\r\n      lineOption2: {},\r\n      data: {},\r\n      isAuthenticated: false\r\n    };\r\n    // this.name = 'test';\r\n    this.email = 'test@test.com';\r\n    this.password = 'test';\r\n  }\r\n  authenticate = ({ email, password }) => {\r\n    if (email === this.email && password === this.password) {\r\n      this.setState({\r\n        isAuthenticated: true\r\n      });\r\n    }\r\n  };\r\n  signout = () => {\r\n    this.setState({\r\n      isAuthenticated: false\r\n    });\r\n  };\r\n\r\n  getNames = data => {\r\n    let names = [];\r\n    data.result.forEach(obj => {\r\n      names.push(obj.hotelname);\r\n    });\r\n    return names;\r\n  };\r\n\r\n  getDistribution = data => {\r\n    let uniqueNames = [];\r\n    let uniqueCount = [];\r\n\r\n    const distribution = data.reduce(\r\n      (acum, cur) => Object.assign(acum, { [cur]: (acum[cur] | 0) + 1 }),\r\n      {}\r\n    );\r\n    for (let el in distribution) {\r\n      if (distribution[el] > 20) {\r\n        uniqueNames.push(el);\r\n        uniqueCount.push(distribution[el]);\r\n      }\r\n    }\r\n    return {\r\n      uniqueNames,\r\n      uniqueCount\r\n    };\r\n  };\r\n\r\n  getPieOption = (names, commentCount) => {\r\n    let legendData = [];\r\n    let seriesData = [];\r\n    let selected = {};\r\n    names.map((name, index) => {\r\n      legendData.push(name);\r\n      seriesData.push({\r\n        name: name,\r\n        value: commentCount[index]\r\n      });\r\n      selected[name] = index < 10;\r\n    });\r\n    return {\r\n      legendData,\r\n      seriesData,\r\n      selected\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    getData('hotelname,baseprice,commentcount').then(data => {\r\n      const names = data.result.hotelname;\r\n      const basePrice = data.result.baseprice;\r\n      const commentCount = data.result.commentcount;\r\n      const { uniqueNames, uniqueCount } = this.getDistribution(names);\r\n      // console.log(names, basePrice, uniqueCount, data)\r\n      const pieOption = this.getPieOption(uniqueNames, uniqueCount);\r\n      //   console.log(pieOption);\r\n      //#region setState\r\n      this.setState({\r\n        pieOption: {\r\n          ...pieBaseObj,\r\n          legend: {\r\n            ...pieBaseObj.legend,\r\n            data: pieOption.legendData,\r\n            selected: pieOption.selected\r\n          },\r\n          series: [\r\n            {\r\n              ...pieBaseObj.series[0],\r\n              data: pieOption.seriesData\r\n            }\r\n          ]\r\n        },\r\n        lineOption1: {\r\n          ...lineBaseObj,\r\n          xAxis: {\r\n            ...lineBaseObj.xAxis,\r\n            data: uniqueNames\r\n          },\r\n          series: [\r\n            {\r\n              ...lineBaseObj.series[0],\r\n              data: uniqueCount\r\n            }\r\n          ]\r\n        },\r\n        lineOption2: {\r\n          title: {\r\n            text: 'Base Price',\r\n            subtext: 'Hotels base price in a sample search result'\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            data: names,\r\n            axisTick: {\r\n              alignWithLabel: true\r\n            },\r\n            axisLabel: {\r\n              rotate: -90\r\n            }\r\n          },\r\n          yAxis: {\r\n            type: 'value'\r\n          },\r\n          series: [\r\n            {\r\n              data: basePrice,\r\n              type: 'line'\r\n            }\r\n          ]\r\n        },\r\n\r\n        data\r\n      });\r\n      //#endregion\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const authObj = {\r\n      isAuthenticated: this.state.isAuthenticated,\r\n      authenticate: this.authenticate,\r\n      signout: this.signout\r\n    };\r\n    return (\r\n      <Router>\r\n        <div className='App'>\r\n          <Nav authObj={authObj}></Nav>\r\n          <Switch>\r\n            <Route exact path={process.env.PUBLIC_URL + '/'}>\r\n              <LoginPage authObj={authObj} />\r\n            </Route>\r\n\r\n            <Route path={process.env.PUBLIC_URL + '/login'}>\r\n              <LoginPage authObj={authObj} />\r\n            </Route>\r\n\r\n            <PrivateRoute\r\n              authObj={authObj}\r\n              path={process.env.PUBLIC_URL + '/piechart'}\r\n            >\r\n              <PieChart {...this.state.pieOption} />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute\r\n              authObj={authObj}\r\n              path={process.env.PUBLIC_URL + '/linechart1'}\r\n            >\r\n              <LineChart {...this.state.lineOption1} />\r\n            </PrivateRoute>\r\n\r\n            <PrivateRoute\r\n              authObj={authObj}\r\n              path={process.env.PUBLIC_URL + '/linechart2'}\r\n            >\r\n              <LineChart {...this.state.lineOption2} />\r\n            </PrivateRoute>\r\n\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}